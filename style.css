/* Font: https://github.com/arrowtype/recursive/blob/main/fonts/ArrowType-Recursive-1.085/LICENSE.txt */

/* The bare minimum English subset, plus copyright & arrows (← ↑ → ↓) & quotes (“ ” ‘ ’) & bullet (•) */
@font-face {
    font-family: 'RecVar';
    font-style: oblique 0deg 15deg;
    font-weight: 300 1000;
    font-display: swap;
    src: url('./fonts/Recursive_VF_1.085--subset_range_english_basic.woff2') format('woff2');
    unicode-range: U+0020-007F,U+00A9,U+2190-2193,U+2018,U+2019,U+201C,U+201D,U+2022;
}

@font-face {
    font-family: 'RecVar';
    src: url('./fonts/Recursive_VF_1.085.woff2') format('woff2');
}

:root {
    /* defaults */
    --tile-size: 5;
    --pixel-scale: 14;
}

html, body, div, label, button, canvas, p, input, textarea {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    box-sizing: border-box;
}
canvas, .grid {
    display: block;
    /* user-drag: none; */
    -webkit-user-drag: none;
    -moz-user-drag: none;
    user-select: none;
    pointer-events: auto; /* no drag */
    touch-action: none;
}
body {
    margin: 0;
    padding: 0;
    background: #222;
    font-size: 14px;
    font-family: 'RecVar', 'Segoe UI Variable', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    overflow: hidden;
}

#main-v {
    display: flex;
    flex-direction: column;
    height: calc(var(--vh-100, 100vh));
}
#main-h {
    flex-grow: 1;
    display: flex;
    flex-direction: row;
    overflow-y: hidden;
}

button {
    background: #333;
    color: #fff;
    outline: 1px solid #777;
    outline-offset: -0.5px;
    border: none;
    border-radius: 0;
    padding: 6px 12px;
    cursor: pointer;
    font-weight: 600;
    height: 2.4em;
    line-height: 0;
    user-select: none;
    -webkit-user-select: none;
}
button:hover {
    background: #444;
}
button:active {
    background: #555;
}
.color-button, .color-button:hover, .color-button:active {
    background-color: #333;
    background-image: radial-gradient(circle at 50% 50%, #555 25%, transparent 25%);
    background-size: calc(var(--pixel-scale) * 1px) calc(var(--pixel-scale) * 1px);
}

.actions, .tool-settings {
    background: #222;
    width: 100%;
    padding: 8px;
    display: flex;
    justify-content: center;
}
.actions {
    border-top: #666 solid 1px;
    flex-wrap: wrap;
    margin-bottom: 12px;
}
.tool-settings {
    border-bottom: #666 solid 1px;
    flex-shrink: 0;
    gap: 10px;
    overflow-x: auto;
}
.tool-settings > .options-container {
    display: flex;
    flex-shrink: 0;
    align-items: center;
}
.tool-settings .options-container label {
    color: #fff;
    padding: 0 0.6em 0 2px;
}

.actions button {
    padding: 6px 12px 6px 6px;
}
.tool-settings button {
    padding: 6px 12px;
    min-width: 40px;
}
.tool-settings button:hover {
    box-shadow: inset 0 0 0 1.5px #888, inset 0 0 0 2.5px #222;
}
.tool-settings button.active {
    box-shadow: inset 0 0 0 2px #0ff, inset 0 0 0 3px black;
}
.tool-settings button.temp_active {
    box-shadow: inset 0 0 0 2px #aaa;
}
.actions button.hidden {
    display: none;
}

/* rules */
.rules {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    gap: 8px;
    padding: 12px;
    overflow: auto;
    padding-bottom: 50px;
}
.rule.flag-group {
    /* shift to the right, and get rid of the gap to the previous rule*/
    margin-left: 12px;
    margin-top: -8px;
}
.rule, .rule-part {
    width: fit-content;
    display: flex;
    background: #555;
    outline: 1px solid #777;
    outline-offset: -0.5px;
    cursor: pointer;
}
.rule-parts {
    display: flex;
}
.rule-content {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    pointer-events: none; /* pass through, unless specific item hovered */
}
.rule-label-container, .rule-comment, .rule-io-label {
    color: #aaa;
    cursor: pointer;
}
.rule-label-container {
    padding: calc(4px + 0.075em) 6px;
    display: flex;
    flex-direction: row;
    gap: 2px;
    font-size: 0.85em;
    pointer-events: none;
}
.rule-comment, .rule-io-label {
    padding: 4px 8px 4px 1px;
    background-color: transparent;
    color: #ddd;
    width: 100%;
    min-width: 60px;
}
.rule-io-label {
    pointer-events: none;
}
.rule-comment {
    font-style: italic;
    pointer-events: auto; /* necessary to be able to edit comment */
}
.rule-part {
    background: #333;
    gap: 6px;
    align-items: center;
    color: #aaa;
    padding: 8px;
    pointer-events: auto;
}
.rule-part label { /* the arrow between parts */
    font-size: 1em;
    pointer-events: none;
    user-select: none;
    -webkit-user-select: none;
}
.rule-pattern {
    position: relative;
    outline: #666 solid 1px;
}
.rule.hovered, .rule-part.hovered, .rule-pattern.hovered {
    outline: 1px solid #999;
    z-index: 18;
}
.rule.drop-target, .rule-part.drop-target, .rule-pattern.drop-target {
    outline: 1px solid #ddd;
    z-index: 19;
}
.rule.selected, .rule-part.selected, .rule-pattern.selected {
    outline: 1px solid #0ff;
    z-index: 20;
}
.rule-pattern > canvas, .rule-pattern > .grid {
    image-rendering: pixelated;
    width: 64px; /* default */
    height: 64px;  /* default */
}
.rule-label, .rule_content * {
    user-select: none;
    -webkit-user-select: none;
    pointer-events: none;
}

/* play screen */
.screen {
    /* background: #2a2a2a; */
    padding: 12px;
    /* border-left: #666 solid 1px; */
}
.screen-wrap {
    position: relative;
    outline: #666 solid 1px;
}
.screen-wrap:hover {
    outline: 1px solid #999;
}
.screen-wrap.selected {
    outline: 1px solid #0ff;
    outline-offset: 0.5px;
}
.screen-wrap > canvas {
    image-rendering: pixelated;
    width: 256px; /* default */
    height: 256px; /* default */
}

/* shared */
.rule-pattern, .screen-wrap {
    background-color: #333;
    background-image: radial-gradient(circle at 50% 50%, #555 25%, transparent 25%);
    background-size: calc(var(--pixel-scale) * 1px) calc(var(--pixel-scale) * 1px);
    cursor: pointer;
    user-select: none;
    -webkit-user-select: none;
}
.grid {
    display: grid;
    position: absolute;
    top: 0; left: 0;
    z-index: 10;
    user-select: none;
    -webkit-user-select: none;
    touch-action: none;
}
.grid::after {
    /* Helps show the tile borders for multi-tile grids */
    content: "";
    position: absolute;
    inset: 0;
    left: -0.5px;
    top: -0.5px;
    pointer-events: none;
    background-image:
        linear-gradient(to right,  #999999 1px, transparent 1px),
        linear-gradient(to bottom, #999999 1px, transparent 1px);
    background-size: calc(var(--tile-size) * var(--pixel-scale) * 1px) 
                     calc(var(--tile-size) * var(--pixel-scale) * 1px);
}
.pixel {
    width: calc(var(--pixel-scale) * 1px);
    height: calc(var(--pixel-scale) * 1px);
    border: 0.5px solid #99999955;
    background: transparent;
}
.pixel:hover {
    outline: 1px solid #fa0;
    outline-offset: -0.5px;
    z-index: 20;
}

/* dialog */
dialog {
    background: #333;
    color: #fff;
    border: 1px solid #666;
    border-radius: 0;
    box-shadow: 0 0 10px #000;
}
dialog h3 {
    margin: 0;
}
dialog::backdrop {
    background: rgba(0, 0, 0, 0.5);
}
dialog form {
    max-width: 300px;
    display: flex;
    flex-direction: column;
    gap: 16px;
}
dialog form > label {
    display: flex;
    flex-direction: column;
    gap: 8px;
    color: #aaa
}
dialog input {
    background: #222;
    color: #fff;
    outline: 1px solid #777;
    outline-offset: -0.5px;
    border: none;
    border-radius: 0;
    padding: 8px 12px;
}
dialog .button-row {
    display: flex;
    gap: 10px;
    justify-content: flex-end;
}